"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const trpc_1 = require("../utils/trpc");
const react_1 = require("next-auth/react");
const head_1 = __importDefault(require("next/head"));
const link_1 = __importDefault(require("next/link"));
const Home_module_css_1 = __importDefault(require("../styles/Home.module.css"));
const Home = () => {
    // const hello = trpc.post.infinite.useQuery('hello', { name: 'world' });
    return (<>
      <head_1.default>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app"/>
        <link rel="icon" href="/favicon.ico"/>
      </head_1.default>
      <main className={Home_module_css_1.default.main}>
        <div className={Home_module_css_1.default.container}>
          <h1 className={Home_module_css_1.default.title}>
            Create <span className={Home_module_css_1.default.pinkSpan}>T3</span> App
          </h1>
          <div className={Home_module_css_1.default.cardRow}>
            <link_1.default className={Home_module_css_1.default.card} href="https://create.t3.gg/en/usage/first-steps" target="_blank">
              <h3 className={Home_module_css_1.default.cardTitle}>First Steps →</h3>
              <div className={Home_module_css_1.default.cardText}>
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </link_1.default>
            <link_1.default className={Home_module_css_1.default.card} href="https://create.t3.gg/en/introduction" target="_blank">
              <h3 className={Home_module_css_1.default.cardTitle}>Documentation →</h3>
              <div className={Home_module_css_1.default.cardText}>
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </link_1.default>
          </div>
          <div className={Home_module_css_1.default.showcaseContainer}>
            <p className={Home_module_css_1.default.showcaseText}>
              {/* {hello.data ? hello.data.greeting : 'Loading tRPC query...'} */}
              data
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>);
};
exports.default = Home;
const AuthShowcase = () => {
    var _a;
    const { data: sessionData } = (0, react_1.useSession)();
    const { data: secretMessage } = trpc_1.trpc.example.getSecretMessage.useQuery(undefined, // no input
    { enabled: (sessionData === null || sessionData === void 0 ? void 0 : sessionData.user) !== undefined });
    // useEffect(() => {
    //   console.log('sessionData changed', sessionData);
    // }, [sessionData]);
    return (<div className={Home_module_css_1.default.authContainer}>
      <p className={Home_module_css_1.default.showcaseText}>
        {sessionData && <span>Logged in as {(_a = sessionData.user) === null || _a === void 0 ? void 0 : _a.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button className={Home_module_css_1.default.loginButton} onClick={sessionData ? () => void (0, react_1.signOut)() : () => void (0, react_1.signIn)()}>
        {sessionData ? 'Sign out' : 'Sign in'}
      </button>
    </div>);
};
/**
 * If you want to statically render this page
 * - Export `appRouter` & `createContext` from [trpc].ts
 * - Make the `opts` object optional on `createContext()`
 *
 * @link https://trpc.io/docs/ssg
 */
// export const getStaticProps = async (
//   context: GetStaticPropsContext<{ filter: string }>,
// ) => {
//   const ssg = createSSGHelpers({
//     router: appRouter,
//     ctx: await createContext(),
//   });
//
//   await ssg.fetchQuery('post.all');
//
//   return {
//     props: {
//       trpcState: ssg.dehydrate(),
//       filter: context.params?.filter ?? 'all',
//     },
//     revalidate: 1,
//   };
// };
